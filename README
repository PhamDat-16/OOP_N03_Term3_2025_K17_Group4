# 💻 CHƯƠNG TRÌNH QUẢN LÝ KHÁCH SẠN

## 📖 Giới thiệu

Đây là ứng dụng web quản lý khách sạn được phát triển bằng **Java Spring Boot**, hỗ trợ các chức năng chính như:

* 🏨 **Quản lý phòng:** Xem danh sách phòng, kiểm tra trạng thái.
* 👤 **Quản lý khách hàng:** Thêm, xóa, cập nhật thông tin khách hàng.
* 📦 **Đặt phòng:** Quản lý đặt phòng và cập nhật tình trạng phòng.
* 📊 **Xem báo cáo:** Theo dõi các phòng đang hoạt động.

Hệ thống sử dụng cơ sở dữ liệu **MySQL** và giao diện thân thiện với người dùng thông qua **Thymeleaf** và **TailwindCSS**.

## 👥 Thành viên nhóm

| Họ tên         | Mã SV    | Vai trò                              |
| -------------- | -------- | ------------------------------------ |
| Trần Văn Nhật  | 23010625 | Quản lý khách hàng (thêm/xóa/sửa)    |
| Nguyễn Duy Bảo | 23017133 | Hiển thị và kiểm tra danh sách phòng |
| Phạm Văn Đạt   | 23017150 | Đặt phòng, cập nhật trạng thái phòng |
| Nguyễn Lệ Thu  | -        | Hướng dẫn làm bài                    |

## 🚀 Công nghệ sử dụng

| Thành phần      | Công nghệ                      |
| --------------- | ------------------------------ |
| Backend         | Java 17 + Spring Boot          |
| View Layer      | Thymeleaf + HTML + TailwindCSS |
| ORM & DB Access | Spring Data JPA                |
| Database        | MySQL 8+                       |
| Build Tool      | **Maven**                      |

## 📦 Cài đặt & Khởi chạy

### 1. Cấu hình cơ sở dữ liệu

Tạo database trong MySQL:

```sql
CREATE DATABASE hotelbooking;
USE hotelbooking;
```

Cấu hình `application.properties` trong `src/main/resources/`:

```properties
spring.datasource.url=jdbc:mysql://localhost:3306/hotelbooking
spring.datasource.username=root
spring.datasource.password=962005
spring.jpa.hibernate.ddl-auto=update
```

### 2. Yêu cầu hệ thống

* Java 17+
* Maven
* MySQL 8+

### 3. Khởi chạy ứng dụng

Ứng dụng sẽ chạy tại: [http://localhost:8081/](http://localhost:8081/)

## 💻 Cách chạy trên Codespace

```bash
sudo apt update
sudo apt install mysql-server
sudo service mysql start
```

Trong MySQL shell:

```sql
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '962005';
CREATE DATABASE IF NOT EXISTS hotelbooking;
FLUSH PRIVILEGES;
EXIT;
```

## 🌐 Giao diện người dùng

| Chức năng            | URL                 | Mô tả                                   |
| -------------------- | ------------------- | --------------------------------------- |
| Trang chủ            | `/`                 | Giao diện chọn chức năng                |
| Đặt phòng            | `/bookings/add`     | Thêm đặt phòng mới                      |
| Quản lý khách hàng   | `/customers/active` | Xem, tìm kiếm, cập nhật, xóa khách hàng |
| Danh sách phòng      | `/rooms`            | Hiển thị tất cả phòng và trạng thái     |
| Phòng đang hoạt động | `/active-rooms`     | Xem danh sách khách đã đặt phòng        |

## 🧱 Cấu trúc hệ thống

```
QuanLyKhachSan/
├── src/
│   ├── main/
│   │   ├── java/com/example/servingwebcontent/
│   │   │   ├── ServingWebContentApplication.java
│   │   │   ├── controller/
│   │   │   ├── model/
│   │   │   └── service/
│   └── resources/
│       ├── static/
│       ├── templates/
│       └── application.properties
├── pom.xml
└── README.md
```

## 📌 Tính năng tương lai

* 💵 Tính tổng tiền thuê theo số ngày.
* 📈 Thống kê phòng đang được sử dụng.
* 🧾 Tạo hóa đơn và lịch sử đặt phòng.
* 🔍 Tìm kiếm khách thuê dài hạn.

## 📚 Tài liệu tham khảo

* **Sơ đồ:** [Link ảnh](https://github-production-user-asset-6210df.s3.amazonaws.com/208896553/446329549-32a6823a-1911-4461-b014-6c90dadbf1f8.jpg)
* **Lưu đồ thuật toán:** [Google Drive](https://drive.google.com/file/d/1-YztSr3uTtsqaNtzF-dGCkJwRVqrML_D/view)
* **Biểu đồ UML:** [Google Drive](https://drive.google.com/file/d/19ZqBlTzRiTUdUylslvrwirQt8ozASohF/view)

## ⚠️ Lưu ý khi chạy

* Đảm bảo **MySQL đang hoạt động**.
* Kiểm tra **cổng 8081** có bị chiếm hay không.
* Nếu có lỗi cổng: sửa `server.port=8081` trong `application.properties`.

## 👨‍💼 Phân công công việc & Phương thức chi tiết

* **Trần Văn Nhật:** `addNewCustomer` trong `test/AddCustomer.java`
* **Nguyễn Duy Bảo:** `findAvailableRoom` trong `test/FindRoom.java`
* **Phạm Văn Đạt:** `bookRoomAndCheckStatus` trong `test/BookRoom.java`
* **Cả nhóm:** Gọi tất cả hàm trong `test/Main.java`

### Mô tả chi tiết:

* `addNewCustomer`: Nhập Name, idCard, Phone. Kiểm tra trùng. Nếu đã tồn tại thì không thêm.
* `findAvailableRoom`: In danh sách, kiểm tra phòng trống/tồn tại.
* `bookRoomAndCheckStatus`: Thêm thông tin đặt phòng, kiểm tra tồn tại, hết hạn thì báo lỗi.
